{"version":3,"sources":["components/HeaderComponent/styles.ts","components/HeaderComponent/index.tsx","utils/reports.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","hooks/usePrevious/index.ts","hooks/useApi/index.ts","pages/SongReport/styles.ts","hooks/useSortColumn/index.ts","components/BodyGridComponent/styles.ts","components/BodyGridComponent/index.tsx","components/HeaderGridComponent/styles.ts","components/HeaderGridComponent/index.tsx","components/LoadComponent/styles.ts","components/LoadComponent/index.tsx","components/GridComponent/styles.ts","components/GridComponent/index.tsx","pages/SongReport/utils/SongReportConstants.ts","pages/SongReport/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Title","h1","BackIcon","FontAwesomeIcon","HeaderComponent","title","hasBackButton","history","useHistory","icon","faArrowAltCircleLeft","onClick","push","defaultProps","Reports","name","label","path","ReportContainer","ReportTitle","h2","ReportListContainer","ReportText","span","Dashboard","map","report","usePrevious","value","ref","useRef","useEffect","current","config","headers","endpointURL","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useApi","url","settings","transformResponse","onSuccess","onError","params","initialData","useState","internalUrl","setInternalUrl","internalParams","setInternalParams","previousParams","internalData","setInternalData","previousData","useReducer","dispatch","isEqual","didCancel","a","axios","baseURL","concat","defaults","result","fetchData","useSortColumn","sortModel","reportData","setData","sortedData","length","orderBy","sortColumn","direction","ContainerRow","tr","ContainerCell","td","BodyGridComponent","columns","rowData","index","column","fieldName","ColumnHeader","th","props","width","ContainerColumn","ColumnText","ContainerIcons","HeaderGridComponent","onChangeSortModel","faSortUp","faSortDown","LoadComponent","color","height","Table","table","GridComponent","reportColumns","loading","setSortModel","SongReportColumns","SongReport","method","Routes","basename","exact","component","Report","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09b36718.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 120px;\n  width: 100%;\n  background-color: #282936;\n  border-bottom: 1px solid #f0ece2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  font-weight: 700;\n`;\n\nexport const BackIcon = styled(FontAwesomeIcon)`\n  position: absolute;\n  left: 50px;\n  font-size: 36px;\n  cursor: pointer;\n`;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\nimport { BackIcon, Container, Title } from './styles';\n\ninterface HeaderProps {\n  title: string;\n  hasBackButton?: boolean;\n}\n\nconst HeaderComponent: React.FC<HeaderProps> = ({\n  title,\n  hasBackButton,\n}: HeaderProps) => {\n  const history = useHistory();\n  const goToDashboard = () => {\n    history.push('/');\n  };\n  return (\n    <Container>\n      {hasBackButton && (\n        <BackIcon icon={faArrowAltCircleLeft} onClick={goToDashboard} />\n      )}\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nHeaderComponent.defaultProps = {\n  hasBackButton: false,\n};\n\nexport default HeaderComponent;\n","interface ReportAttribute {\n  name: string;\n  label: string;\n  path: string;\n}\n\nexport const Reports: Array<ReportAttribute> = [\n  {\n    name: 'songsReport',\n    label: 'Songs Report',\n    path: '/songsReport',\n  },\n];\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 600;\n  font-size: 34px;\n  padding: 20px;\n`;\n\nexport const ReportContainer = styled.div`\n  height: 300px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding-left: 50px;\n`;\n\nexport const ReportTitle = styled.h2`\n  font-size: 36px;\n`;\n\nexport const ReportListContainer = styled.div`\n  display: flex;\n  margin-top: 10px;\n  padding-left: 15px;\n`;\n\nexport const ReportText = styled.span`\n  font-size: 26px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport HeaderComponent from '../../components/HeaderComponent';\nimport { Reports } from '../../utils/reports';\n\nimport {\n  ReportContainer,\n  Container,\n  ReportTitle,\n  ReportListContainer,\n  ReportText,\n} from './styles';\n\nconst Dashboard: React.FC = () => {\n  const history = useHistory();\n  const goToReport = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <Container>\n      <HeaderComponent title=\"Music Lab\" />\n      <ReportContainer>\n        <ReportTitle>Reports:</ReportTitle>\n        <ReportListContainer>\n          {Reports.map(report => (\n            <ReportText onClick={() => goToReport(report.path)}>\n              {report.label}\n            </ReportText>\n          ))}\n        </ReportListContainer>\n      </ReportContainer>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { useState, useEffect, useReducer, Dispatch } from 'react';\nimport axios, { AxiosRequestConfig, AxiosTransformer } from 'axios';\nimport { concat, isEqual } from 'lodash';\nimport { usePrevious } from '../usePrevious';\n\ntype ApiAction<T> =\n  | { type: 'FETCH_INIT' }\n  | { type: 'FETCH_SUCCESS'; payload: T }\n  | { type: 'FETCH_ERROR' };\n\ninterface UseApiSettings<T> extends AxiosRequestConfig {\n  initialData?: T;\n  onSuccess?: Dispatch<T>;\n  onError?: () => void;\n}\n\ninterface UseApiResponse<T> {\n  isLoading: boolean;\n  isError: boolean;\n  data?: T;\n  setUrl?: Dispatch<string>;\n  setParams?: Dispatch<unknown>;\n}\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst endpointURL =\n  'https://kagbz0z1dg.execute-api.sa-east-1.amazonaws.com/Prod';\n\nfunction dataFetchReducer<T>(\n  state: UseApiResponse<T>,\n  action: ApiAction<T>,\n): UseApiResponse<T> {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction useApi<T>(\n  url: string,\n  settings?: UseApiSettings<T>,\n): UseApiResponse<T> {\n  const { transformResponse, onSuccess, onError, data, params, initialData } =\n    settings || {};\n\n  const [internalUrl, setInternalUrl] = useState(url);\n  const [internalParams, setInternalParams] = useState(params);\n  const previousParams = usePrevious(params);\n  const [internalData, setInternalData] = useState(data);\n  const previousData = usePrevious(data);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    setInternalUrl(url);\n  }, [url]);\n\n  useEffect(() => {\n    if (!isEqual(data, previousData)) {\n      setInternalData(data);\n    }\n  }, [data, previousData]);\n\n  useEffect(() => {\n    if (!isEqual(params, previousParams)) {\n      setInternalParams(params);\n    }\n  }, [params, previousParams]);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        const result = await axios({\n          ...config,\n          ...settings,\n          params: internalParams,\n          data: internalData,\n          url: internalUrl,\n          baseURL: endpointURL,\n          transformResponse:\n            transformResponse &&\n            (concat(\n              axios.defaults.transformResponse,\n              transformResponse,\n            ) as AxiosTransformer[]),\n        });\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n          if (onSuccess) {\n            onSuccess(result.data);\n          }\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_ERROR' });\n          if (onError) {\n            onError();\n          }\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [endpointURL, internalUrl, internalData, internalParams]);\n\n  return { ...(state as UseApiResponse<T>) };\n}\n\nexport default useApi;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import { useState, useEffect } from 'react';\nimport { orderBy } from 'lodash';\nimport { SortType } from '../../types/SortType';\nimport { ReportTypes } from '../../types/ReportTypes';\n\nexport interface UseSortColumn {\n  data?: ReportTypes;\n}\n\nconst useSortColumn = (\n  sortModel: SortType | undefined,\n  reportData: ReportTypes,\n): UseSortColumn => {\n  const [data, setData] = useState<ReportTypes>([]);\n  const onSortChange = (): ReportTypes => {\n    if (reportData && reportData?.length > 0) {\n      return orderBy(\n        reportData,\n        [sortModel?.sortColumn],\n        [sortModel?.direction ? 'asc' : 'desc'],\n      ) as ReportTypes;\n    }\n    return [];\n  };\n\n  useEffect(() => {\n    const sortedData = onSortChange();\n    setData(sortedData);\n  }, [reportData, sortModel]);\n\n  return {\n    data,\n  };\n};\n\nexport default useSortColumn;\n","import styled from 'styled-components';\n\nexport const ContainerBodyGrid = styled.div``;\n\nexport const ContainerRow = styled.tr`\n  border: 1px solid #f0ece2;\n  height: 60px;\n  max-height: 60px;\n`;\n\nexport const ContainerCell = styled.td`\n  text-align: center;\n  padding: 4px;\n  border-left: 1px solid #f0ece2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import React from 'react';\nimport { ColumnGridType } from '../../types/ColumnGridType';\nimport { ReportTypes } from '../../types/ReportTypes';\n\nimport { ContainerRow, ContainerCell, ContainerBodyGrid } from './styles';\n\ninterface BodyGridProps {\n  reportData: ReportTypes;\n  columns: ColumnGridType[];\n}\nconst BodyGridComponent: React.FC<BodyGridProps> = ({\n  reportData,\n  columns,\n}: BodyGridProps) => {\n  return (\n    <>\n      {reportData?.map((rowData, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <ContainerRow key={index}>\n          {columns.map(column => (\n            <ContainerCell key={column.fieldName}>\n              {rowData[column.fieldName as keyof ReportTypes]}\n            </ContainerCell>\n          ))}\n        </ContainerRow>\n      ))}\n    </>\n  );\n};\n\nexport default BodyGridComponent;\n","import styled from 'styled-components';\n\ninterface ColumnHeaderProps {\n  width: number;\n}\nexport const ContainerRow = styled.tr``;\n\nexport const ColumnHeader = styled.th`\n  border: 5px solid #f0ece2;\n  padding: 4px 24px;\n  min-width: ${(props: ColumnHeaderProps) => `${props.width}px`};\n  cursor: pointer;\n`;\n\nexport const ContainerColumn = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const ColumnText = styled.span`\n  font-size: 20px;\n`;\n\nexport const ContainerIcons = styled.div`\n  margin-left: 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { ColumnGridType } from '../../types/ColumnGridType';\n\nimport {\n  ContainerRow,\n  ColumnHeader,\n  ColumnText,\n  ContainerIcons,\n  ContainerColumn,\n} from './styles';\nimport { SortType } from '../../types/SortType';\n\ninterface HeaderGridProps {\n  columns: ColumnGridType[];\n  sortModel: SortType | undefined;\n  onChangeSortModel: { (sortColumn: string): void };\n}\nconst HeaderGridComponent: React.FC<HeaderGridProps> = ({\n  columns,\n  sortModel,\n  onChangeSortModel,\n}: HeaderGridProps) => {\n  return (\n    <ContainerRow>\n      {columns.map((column, index) => (\n        <ColumnHeader\n          width={column.width ?? 100}\n          // eslint-disable-next-line react/no-array-index-key\n          key={index}\n          onClick={() => onChangeSortModel(column.fieldName)}\n        >\n          <ContainerColumn>\n            <ColumnText>{column.label ?? column.fieldName}</ColumnText>\n            {sortModel?.sortColumn === column.fieldName && (\n              <ContainerIcons>\n                <FontAwesomeIcon\n                  icon={sortModel?.direction ? faSortUp : faSortDown}\n                />\n              </ContainerIcons>\n            )}\n          </ContainerColumn>\n        </ColumnHeader>\n      ))}\n    </ContainerRow>\n  );\n};\n\nexport default HeaderGridComponent;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n`;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nimport { Container } from './styles';\n\nconst LoadComponent: React.FC = () => {\n  return (\n    <Container>\n      <ReactLoading type=\"cylon\" color=\"#f0ece2\" height={667} width={375} />\n    </Container>\n  );\n};\n\nexport default LoadComponent;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 87vh;\n  padding: 36px;\n`;\n\nexport const Table = styled.table`\n  border: 1px solid #f0ece2;\n  border-radius: 4px;\n  border-collapse: collapse;\n  margin-top: 30px;\n  display: block;\n  max-width: 100%;\n  overflow-x: auto;\n`;\n","import React, { useState } from 'react';\nimport useSortColumn from '../../hooks/useSortColumn';\nimport { ColumnGridType } from '../../types/ColumnGridType';\nimport { ReportTypes } from '../../types/ReportTypes';\nimport { SortType } from '../../types/SortType';\nimport BodyGridComponent from '../BodyGridComponent';\nimport HeaderGridComponent from '../HeaderGridComponent';\nimport LoadComponent from '../LoadComponent';\n\nimport { Container, Table } from './styles';\n\ninterface GridProps {\n  reportData: ReportTypes;\n  reportColumns: ColumnGridType[];\n  loading: boolean;\n}\n\nconst GridComponent: React.FC<GridProps> = ({\n  reportData,\n  reportColumns,\n  loading,\n}: GridProps) => {\n  const [sortModel, setSortModel] = useState<SortType>();\n  const { data: sortedData } = useSortColumn(sortModel, reportData);\n\n  const onChangeSortModel = (sortColumn: string) => {\n    if (sortModel?.sortColumn === sortColumn) {\n      return setSortModel({\n        ...sortModel,\n        ...{ direction: !sortModel?.direction },\n      });\n    }\n    return setSortModel({ sortColumn, direction: true });\n  };\n\n  return (\n    <Container>\n      <Table>\n        <HeaderGridComponent\n          columns={reportColumns}\n          sortModel={sortModel}\n          onChangeSortModel={onChangeSortModel}\n        />\n        {loading ? (\n          <LoadComponent />\n        ) : (\n          <BodyGridComponent reportData={sortedData} columns={reportColumns} />\n        )}\n      </Table>\n    </Container>\n  );\n};\n\nexport default GridComponent;\n","import { ColumnGridType } from '../../../types/ColumnGridType';\n\nexport const SongReportColumns: Array<ColumnGridType> = [\n  {\n    fieldName: 'song',\n    label: 'Song',\n    width: 320,\n  },\n  {\n    fieldName: 'artist',\n    label: 'Artist',\n    width: 120,\n  },\n  {\n    fieldName: 'songReleaseDate',\n    label: 'Song Release Date',\n    width: 120,\n  },\n  {\n    fieldName: 'playCount',\n    label: 'Play Count',\n    width: 120,\n  },\n  {\n    fieldName: 'metricA',\n    label: 'Metric A',\n    width: 120,\n  },\n  {\n    fieldName: 'metricB',\n    label: 'Metric B',\n    width: 120,\n  },\n  {\n    fieldName: 'metricC',\n    label: 'Metric C',\n    width: 120,\n  },\n  {\n    fieldName: 'metricD',\n    label: 'Metric D',\n    width: 120,\n  },\n  {\n    fieldName: 'metricE',\n    label: 'Metric E',\n    width: 120,\n  },\n  {\n    fieldName: 'metricF',\n    label: 'Metric F',\n    width: 120,\n  },\n  {\n    fieldName: 'metricG',\n    label: 'Metric G',\n    width: 120,\n  },\n  {\n    fieldName: 'metricH',\n    label: 'Metric H',\n    width: 120,\n  },\n  {\n    fieldName: 'metricI',\n    label: 'Metric I',\n    width: 120,\n  },\n  {\n    fieldName: 'metricJ',\n    label: 'Metric J',\n    width: 120,\n  },\n  {\n    fieldName: 'metricK',\n    label: 'Metric K',\n    width: 120,\n  },\n  {\n    fieldName: 'metricL',\n    label: 'Metric L',\n    width: 120,\n  },\n  {\n    fieldName: 'metricM',\n    label: 'Metric M',\n    width: 120,\n  },\n  {\n    fieldName: 'metricN',\n    label: 'Metric N',\n    width: 120,\n  },\n  {\n    fieldName: 'metricO',\n    label: 'Metric O',\n    width: 120,\n  },\n  {\n    fieldName: 'metricP',\n    label: 'Metric P',\n    width: 120,\n  },\n];\n","import React from 'react';\nimport useApi from '../../hooks/useApi';\nimport { SongReportResponse } from './utils/SongReportTypes';\n\nimport { Container } from './styles';\nimport GridComponent from '../../components/GridComponent';\nimport { SongReportColumns } from './utils/SongReportConstants';\nimport HeaderComponent from '../../components/HeaderComponent';\n\nconst url = '/songs-report';\nconst SongReport: React.FC = () => {\n  const { data: reportData, isLoading } = useApi<SongReportResponse>(url, {\n    method: 'GET',\n  });\n\n  return (\n    <Container>\n      <HeaderComponent title=\"Songs Report\" hasBackButton />\n      <GridComponent\n        loading={isLoading}\n        reportData={reportData?.data ?? []}\n        reportColumns={SongReportColumns}\n      />\n    </Container>\n  );\n};\n\nexport default SongReport;\n","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Report from '../pages/SongReport';\n\nconst Routes: React.FC = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/songsReport\" component={Report} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    --webkit-font-smooth: antialiased;\n    background-color: #263752;\n    color: #f0ece2;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n// import { Container } from './styles';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Routes />\n      <GlobalStyle />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}